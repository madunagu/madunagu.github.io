{
  "version": 3,
  "sources": ["../../gsap/PixiPlugin.js"],
  "sourcesContent": ["/*!\n * PixiPlugin 3.12.5\n * https://gsap.com\n *\n * @license Copyright 2008-2024, GreenSock. All rights reserved.\n * Subject to the terms at https://gsap.com/standard-license or for\n * Club GSAP members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _splitColor,\n    _coreInitted,\n    _PIXI,\n    PropTween,\n    _getSetter,\n    _isV4,\n    _windowExists = function _windowExists() {\n  return typeof window !== \"undefined\";\n},\n    _getGSAP = function _getGSAP() {\n  return gsap || _windowExists() && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _isFunction = function _isFunction(value) {\n  return typeof value === \"function\";\n},\n    _warn = function _warn(message) {\n  return console.warn(message);\n},\n    _idMatrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    _lumR = 0.212671,\n    _lumG = 0.715160,\n    _lumB = 0.072169,\n    _filterClass = function _filterClass(name) {\n  return _isFunction(_PIXI[name]) ? _PIXI[name] : _PIXI.filters[name];\n},\n    // in PIXI 7.1, filters moved from PIXI.filters to just PIXI\n_applyMatrix = function _applyMatrix(m, m2) {\n  var temp = [],\n      i = 0,\n      z = 0,\n      y,\n      x;\n\n  for (y = 0; y < 4; y++) {\n    for (x = 0; x < 5; x++) {\n      z = x === 4 ? m[i + 4] : 0;\n      temp[i + x] = m[i] * m2[x] + m[i + 1] * m2[x + 5] + m[i + 2] * m2[x + 10] + m[i + 3] * m2[x + 15] + z;\n    }\n\n    i += 5;\n  }\n\n  return temp;\n},\n    _setSaturation = function _setSaturation(m, n) {\n  var inv = 1 - n,\n      r = inv * _lumR,\n      g = inv * _lumG,\n      b = inv * _lumB;\n  return _applyMatrix([r + n, g, b, 0, 0, r, g + n, b, 0, 0, r, g, b + n, 0, 0, 0, 0, 0, 1, 0], m);\n},\n    _colorize = function _colorize(m, color, amount) {\n  var c = _splitColor(color),\n      r = c[0] / 255,\n      g = c[1] / 255,\n      b = c[2] / 255,\n      inv = 1 - amount;\n\n  return _applyMatrix([inv + amount * r * _lumR, amount * r * _lumG, amount * r * _lumB, 0, 0, amount * g * _lumR, inv + amount * g * _lumG, amount * g * _lumB, 0, 0, amount * b * _lumR, amount * b * _lumG, inv + amount * b * _lumB, 0, 0, 0, 0, 0, 1, 0], m);\n},\n    _setHue = function _setHue(m, n) {\n  n *= Math.PI / 180;\n  var c = Math.cos(n),\n      s = Math.sin(n);\n  return _applyMatrix([_lumR + c * (1 - _lumR) + s * -_lumR, _lumG + c * -_lumG + s * -_lumG, _lumB + c * -_lumB + s * (1 - _lumB), 0, 0, _lumR + c * -_lumR + s * 0.143, _lumG + c * (1 - _lumG) + s * 0.14, _lumB + c * -_lumB + s * -0.283, 0, 0, _lumR + c * -_lumR + s * -(1 - _lumR), _lumG + c * -_lumG + s * _lumG, _lumB + c * (1 - _lumB) + s * _lumB, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], m);\n},\n    _setContrast = function _setContrast(m, n) {\n  return _applyMatrix([n, 0, 0, 0, 0.5 * (1 - n), 0, n, 0, 0, 0.5 * (1 - n), 0, 0, n, 0, 0.5 * (1 - n), 0, 0, 0, 1, 0], m);\n},\n    _getFilter = function _getFilter(target, type) {\n  var filterClass = _filterClass(type),\n      filters = target.filters || [],\n      i = filters.length,\n      filter;\n\n  filterClass || _warn(type + \" not found. PixiPlugin.registerPIXI(PIXI)\");\n\n  while (--i > -1) {\n    if (filters[i] instanceof filterClass) {\n      return filters[i];\n    }\n  }\n\n  filter = new filterClass();\n\n  if (type === \"BlurFilter\") {\n    filter.blur = 0;\n  }\n\n  filters.push(filter);\n  target.filters = filters;\n  return filter;\n},\n    _addColorMatrixFilterCacheTween = function _addColorMatrixFilterCacheTween(p, plugin, cache, vars) {\n  //we cache the ColorMatrixFilter components in a _gsColorMatrixFilter object attached to the target object so that it's easy to grab the current value at any time.\n  plugin.add(cache, p, cache[p], vars[p]);\n\n  plugin._props.push(p);\n},\n    _applyBrightnessToMatrix = function _applyBrightnessToMatrix(brightness, matrix) {\n  var filterClass = _filterClass(\"ColorMatrixFilter\"),\n      temp = new filterClass();\n\n  temp.matrix = matrix;\n  temp.brightness(brightness, true);\n  return temp.matrix;\n},\n    _copy = function _copy(obj) {\n  var copy = {},\n      p;\n\n  for (p in obj) {\n    copy[p] = obj[p];\n  }\n\n  return copy;\n},\n    _CMFdefaults = {\n  contrast: 1,\n  saturation: 1,\n  colorizeAmount: 0,\n  colorize: \"rgb(255,255,255)\",\n  hue: 0,\n  brightness: 1\n},\n    _parseColorMatrixFilter = function _parseColorMatrixFilter(target, v, pg) {\n  var filter = _getFilter(target, \"ColorMatrixFilter\"),\n      cache = target._gsColorMatrixFilter = target._gsColorMatrixFilter || _copy(_CMFdefaults),\n      combine = v.combineCMF && !(\"colorMatrixFilter\" in v && !v.colorMatrixFilter),\n      i,\n      matrix,\n      startMatrix;\n\n  startMatrix = filter.matrix;\n\n  if (v.resolution) {\n    filter.resolution = v.resolution;\n  }\n\n  if (v.matrix && v.matrix.length === startMatrix.length) {\n    matrix = v.matrix;\n\n    if (cache.contrast !== 1) {\n      _addColorMatrixFilterCacheTween(\"contrast\", pg, cache, _CMFdefaults);\n    }\n\n    if (cache.hue) {\n      _addColorMatrixFilterCacheTween(\"hue\", pg, cache, _CMFdefaults);\n    }\n\n    if (cache.brightness !== 1) {\n      _addColorMatrixFilterCacheTween(\"brightness\", pg, cache, _CMFdefaults);\n    }\n\n    if (cache.colorizeAmount) {\n      _addColorMatrixFilterCacheTween(\"colorize\", pg, cache, _CMFdefaults);\n\n      _addColorMatrixFilterCacheTween(\"colorizeAmount\", pg, cache, _CMFdefaults);\n    }\n\n    if (cache.saturation !== 1) {\n      _addColorMatrixFilterCacheTween(\"saturation\", pg, cache, _CMFdefaults);\n    }\n  } else {\n    matrix = _idMatrix.slice();\n\n    if (v.contrast != null) {\n      matrix = _setContrast(matrix, +v.contrast);\n\n      _addColorMatrixFilterCacheTween(\"contrast\", pg, cache, v);\n    } else if (cache.contrast !== 1) {\n      if (combine) {\n        matrix = _setContrast(matrix, cache.contrast);\n      } else {\n        _addColorMatrixFilterCacheTween(\"contrast\", pg, cache, _CMFdefaults);\n      }\n    }\n\n    if (v.hue != null) {\n      matrix = _setHue(matrix, +v.hue);\n\n      _addColorMatrixFilterCacheTween(\"hue\", pg, cache, v);\n    } else if (cache.hue) {\n      if (combine) {\n        matrix = _setHue(matrix, cache.hue);\n      } else {\n        _addColorMatrixFilterCacheTween(\"hue\", pg, cache, _CMFdefaults);\n      }\n    }\n\n    if (v.brightness != null) {\n      matrix = _applyBrightnessToMatrix(+v.brightness, matrix);\n\n      _addColorMatrixFilterCacheTween(\"brightness\", pg, cache, v);\n    } else if (cache.brightness !== 1) {\n      if (combine) {\n        matrix = _applyBrightnessToMatrix(cache.brightness, matrix);\n      } else {\n        _addColorMatrixFilterCacheTween(\"brightness\", pg, cache, _CMFdefaults);\n      }\n    }\n\n    if (v.colorize != null) {\n      v.colorizeAmount = \"colorizeAmount\" in v ? +v.colorizeAmount : 1;\n      matrix = _colorize(matrix, v.colorize, v.colorizeAmount);\n\n      _addColorMatrixFilterCacheTween(\"colorize\", pg, cache, v);\n\n      _addColorMatrixFilterCacheTween(\"colorizeAmount\", pg, cache, v);\n    } else if (cache.colorizeAmount) {\n      if (combine) {\n        matrix = _colorize(matrix, cache.colorize, cache.colorizeAmount);\n      } else {\n        _addColorMatrixFilterCacheTween(\"colorize\", pg, cache, _CMFdefaults);\n\n        _addColorMatrixFilterCacheTween(\"colorizeAmount\", pg, cache, _CMFdefaults);\n      }\n    }\n\n    if (v.saturation != null) {\n      matrix = _setSaturation(matrix, +v.saturation);\n\n      _addColorMatrixFilterCacheTween(\"saturation\", pg, cache, v);\n    } else if (cache.saturation !== 1) {\n      if (combine) {\n        matrix = _setSaturation(matrix, cache.saturation);\n      } else {\n        _addColorMatrixFilterCacheTween(\"saturation\", pg, cache, _CMFdefaults);\n      }\n    }\n  }\n\n  i = matrix.length;\n\n  while (--i > -1) {\n    if (matrix[i] !== startMatrix[i]) {\n      pg.add(startMatrix, i, startMatrix[i], matrix[i], \"colorMatrixFilter\");\n    }\n  }\n\n  pg._props.push(\"colorMatrixFilter\");\n},\n    _renderColor = function _renderColor(ratio, _ref) {\n  var t = _ref.t,\n      p = _ref.p,\n      color = _ref.color,\n      set = _ref.set;\n  set(t, p, color[0] << 16 | color[1] << 8 | color[2]);\n},\n    _renderDirtyCache = function _renderDirtyCache(ratio, _ref2) {\n  var g = _ref2.g;\n\n  if (g) {\n    //in order for PixiJS to actually redraw GraphicsData, we've gotta increment the \"dirty\" and \"clearDirty\" values. If we don't do this, the values will be tween properly, but not rendered.\n    g.dirty++;\n    g.clearDirty++;\n  }\n},\n    _renderAutoAlpha = function _renderAutoAlpha(ratio, data) {\n  data.t.visible = !!data.t.alpha;\n},\n    _addColorTween = function _addColorTween(target, p, value, plugin) {\n  var currentValue = target[p],\n      startColor = _splitColor(_isFunction(currentValue) ? target[p.indexOf(\"set\") || !_isFunction(target[\"get\" + p.substr(3)]) ? p : \"get\" + p.substr(3)]() : currentValue),\n      endColor = _splitColor(value);\n\n  plugin._pt = new PropTween(plugin._pt, target, p, 0, 0, _renderColor, {\n    t: target,\n    p: p,\n    color: startColor,\n    set: _getSetter(target, p)\n  });\n  plugin.add(startColor, 0, startColor[0], endColor[0]);\n  plugin.add(startColor, 1, startColor[1], endColor[1]);\n  plugin.add(startColor, 2, startColor[2], endColor[2]);\n},\n    _colorProps = {\n  tint: 1,\n  lineColor: 1,\n  fillColor: 1\n},\n    _xyContexts = \"position,scale,skew,pivot,anchor,tilePosition,tileScale\".split(\",\"),\n    _contexts = {\n  x: \"position\",\n  y: \"position\",\n  tileX: \"tilePosition\",\n  tileY: \"tilePosition\"\n},\n    _colorMatrixFilterProps = {\n  colorMatrixFilter: 1,\n  saturation: 1,\n  contrast: 1,\n  hue: 1,\n  colorize: 1,\n  colorizeAmount: 1,\n  brightness: 1,\n  combineCMF: 1\n},\n    _DEG2RAD = Math.PI / 180,\n    _isString = function _isString(value) {\n  return typeof value === \"string\";\n},\n    _degreesToRadians = function _degreesToRadians(value) {\n  return _isString(value) && value.charAt(1) === \"=\" ? value.substr(0, 2) + parseFloat(value.substr(2)) * _DEG2RAD : value * _DEG2RAD;\n},\n    _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {\n  return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 100000) / 100000, data);\n},\n    _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue, radians) {\n  var cap = 360 * (radians ? _DEG2RAD : 1),\n      isString = _isString(endValue),\n      relative = isString && endValue.charAt(1) === \"=\" ? +(endValue.charAt(0) + \"1\") : 0,\n      endNum = parseFloat(relative ? endValue.substr(2) : endValue) * (radians ? _DEG2RAD : 1),\n      change = relative ? endNum * relative : endNum - startNum,\n      finalValue = startNum + change,\n      direction,\n      pt;\n\n  if (isString) {\n    direction = endValue.split(\"_\")[1];\n\n    if (direction === \"short\") {\n      change %= cap;\n\n      if (change !== change % (cap / 2)) {\n        change += change < 0 ? cap : -cap;\n      }\n    }\n\n    if (direction === \"cw\" && change < 0) {\n      change = (change + cap * 1e10) % cap - ~~(change / cap) * cap;\n    } else if (direction === \"ccw\" && change > 0) {\n      change = (change - cap * 1e10) % cap - ~~(change / cap) * cap;\n    }\n  }\n\n  plugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);\n  pt.e = finalValue;\n  return pt;\n},\n    _initCore = function _initCore() {\n  if (!_coreInitted) {\n    gsap = _getGSAP();\n    _PIXI = _coreInitted = _PIXI || _windowExists() && window.PIXI;\n    _isV4 = _PIXI && _PIXI.VERSION && _PIXI.VERSION.charAt(0) === \"4\";\n\n    _splitColor = function _splitColor(color) {\n      return gsap.utils.splitColor((color + \"\").substr(0, 2) === \"0x\" ? \"#\" + color.substr(2) : color);\n    }; // some colors in PIXI are reported as \"0xFF4421\" instead of \"#FF4421\".\n\n  }\n},\n    i,\n    p; //context setup...\n\n\nfor (i = 0; i < _xyContexts.length; i++) {\n  p = _xyContexts[i];\n  _contexts[p + \"X\"] = p;\n  _contexts[p + \"Y\"] = p;\n}\n\nexport var PixiPlugin = {\n  version: \"3.12.5\",\n  name: \"pixi\",\n  register: function register(core, Plugin, propTween) {\n    gsap = core;\n    PropTween = propTween;\n    _getSetter = Plugin.getSetter;\n\n    _initCore();\n  },\n  headless: true,\n  // doesn't need window\n  registerPIXI: function registerPIXI(pixi) {\n    _PIXI = pixi;\n  },\n  init: function init(target, values, tween, index, targets) {\n    _PIXI || _initCore();\n\n    if (!_PIXI) {\n      _warn(\"PIXI was not found. PixiPlugin.registerPIXI(PIXI);\");\n\n      return false;\n    }\n\n    var context, axis, value, colorMatrix, filter, p, padding, i, data;\n\n    for (p in values) {\n      context = _contexts[p];\n      value = values[p];\n\n      if (context) {\n        axis = ~p.charAt(p.length - 1).toLowerCase().indexOf(\"x\") ? \"x\" : \"y\";\n        this.add(target[context], axis, target[context][axis], context === \"skew\" ? _degreesToRadians(value) : value, 0, 0, 0, 0, 0, 1);\n      } else if (p === \"scale\" || p === \"anchor\" || p === \"pivot\" || p === \"tileScale\") {\n        this.add(target[p], \"x\", target[p].x, value);\n        this.add(target[p], \"y\", target[p].y, value);\n      } else if (p === \"rotation\" || p === \"angle\") {\n        //PIXI expects rotation in radians, but as a convenience we let folks define it in degrees and we do the conversion.\n        _addRotationalPropTween(this, target, p, target[p], value, p === \"rotation\");\n      } else if (_colorMatrixFilterProps[p]) {\n        if (!colorMatrix) {\n          _parseColorMatrixFilter(target, values.colorMatrixFilter || values, this);\n\n          colorMatrix = true;\n        }\n      } else if (p === \"blur\" || p === \"blurX\" || p === \"blurY\" || p === \"blurPadding\") {\n        filter = _getFilter(target, \"BlurFilter\");\n        this.add(filter, p, filter[p], value);\n\n        if (values.blurPadding !== 0) {\n          padding = values.blurPadding || Math.max(filter[p], value) * 2;\n          i = target.filters.length;\n\n          while (--i > -1) {\n            target.filters[i].padding = Math.max(target.filters[i].padding, padding); //if we don't expand the padding on all the filters, it can look clipped.\n          }\n        }\n      } else if (_colorProps[p]) {\n        if ((p === \"lineColor\" || p === \"fillColor\") && target instanceof _PIXI.Graphics) {\n          data = (target.geometry || target).graphicsData; //\"geometry\" was introduced in PIXI version 5\n\n          this._pt = new PropTween(this._pt, target, p, 0, 0, _renderDirtyCache, {\n            g: target.geometry || target\n          });\n          i = data.length;\n\n          while (--i > -1) {\n            _addColorTween(_isV4 ? data[i] : data[i][p.substr(0, 4) + \"Style\"], _isV4 ? p : \"color\", value, this);\n          }\n        } else {\n          _addColorTween(target, p, value, this);\n        }\n      } else if (p === \"autoAlpha\") {\n        this._pt = new PropTween(this._pt, target, \"visible\", 0, 0, _renderAutoAlpha);\n        this.add(target, \"alpha\", target.alpha, value);\n\n        this._props.push(\"alpha\", \"visible\");\n      } else if (p !== \"resolution\") {\n        this.add(target, p, \"get\", value);\n      }\n\n      this._props.push(p);\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(PixiPlugin);\nexport { PixiPlugin as default };"],
  "mappings": "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",
  "names": ["_windowExists", "_getGSAP", "_isFunction", "_warn", "_filterClass", "_applyMatrix", "i", "_setSaturation", "_colorize", "_setHue", "_setContrast", "_getFilter", "_addColorMatrixFilterCacheTween", "p", "_applyBrightnessToMatrix", "_copy", "_parseColorMatrixFilter", "_renderColor", "_renderDirtyCache", "_renderAutoAlpha", "_addColorTween", "_isString", "_degreesToRadians", "_renderPropWithEnd", "_addRotationalPropTween", "_initCore", "_splitColor"]
}
